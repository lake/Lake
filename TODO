

Before pushing to github, run script fix-all-trees.rb.  Note that this script is
destructive to the commit history, so everything should be merged in before
running it.


Review README

* Add an R task to lake to so that users can easily create dependencies
  on R scripts in their own Rakefile.local.  Also include a commented
  out example of the use of such a task in Rakefile.local.

* Add rake as submodule from github

* Add lake command that runs rake by default and creates new paper projects
    with switch for different types and adds commits hooks for the lake
    submodule to push changes to wips on the central server
		- checks out git repo in ~/.lake/repo
		- makes submodules that symlink to this local repo
			This will solve the Prem problem.
		- creates from templates better
        - creates a complete .gitignore
    When called and there is no Rakefile in the top level
    directory, use the standard Rakefile.local in lake.
    

*  Graphics:  1) better error messages, as when transfig or what not
is not installed and 2) try to continue as much as possible.

* Extract all fixes from gitlantic.

* Handle multiple masters.
	given a project with two master tex files foo and bar,
	rake		# builds all (here foo and bar) and views the first in 
				# lexicographic order (bar)
	rake bar	# builds and views bar
	rake bar.pdf	# builds bar
	rake pdf	# build first pdf (in this case bar)
	rake pdfs	# build all pdfs
	
    Lake should detect whether MASTER_TEX_FILES is nil and gracefully fail.
	This happens with my dissertation because paper.master is the actual checked
	in version of paper.tex.

    Need to find consensus on which pdf to view when there are multiple
    masters and pdf not explicitly set.  Perhaps set explicitly in 
    Rakefile.local

* Test harness

     - Add regression tests for the citation bug
     - Add test for needless bibtex execution (from Zhendong field proposal)

* Write documentation

    README
	    authors
	    installation instructions
	    description & features
	Add a Bibtex subsection to the Usage section.
	Complete list of suffixes that Lake recognizes somewhere in the Usage
	section, not sure where.


Better UI
	lake command
		- checks out git repo in ~/.lake/repo
		- makes submodules that symlink to this local repo
			This will solve the Prem problem.
		- creates from templates better


Fix citations bug (and do so with regression tests!):

    If you add a citation to a tex file and to a bib file, but you're using
    includeonly to build only a subset of a project, the citations will never be
    resolved and you'll uselessly re-run latex max_iterations.

	General approach:

		Slightly less unseriously, we might be able to tackle this by checksumming
		*.aux after each loop and quitting early if it never changes.  This means
		that you only run pdflatex one extra time instead of max iterations.

	Checksumming *.aux does seem to work, although checksumming the pdf does not
	(presumably because of timestamps).

Make bib files dependencies of pdf

Check environment and give usefull errors
	e.g. we assume `pdflatex` is on PATH

support multiplex
	e.g. hwk1.tex => hwk1.pdf, hwk1-sols.pdf

Excessive bibtexing:
	The field proposal on which I worked with Zhendong and Prem had master tex
	files with no bibliography, on which lake nonetheless ran bibtex, and
	stopped with an error.

In the field proposal written with Zhendong and Prem, another bib bug cropped
up.  To reproduce, remove the exclusions and try to build all masters in the
project.

Add support for a configuration file to reduce the tedium of copying identical
local Rakefiles into each project.

Earl's todo emails:
	Get rid of the Bib assumption and just discover bib files, then add support
	for exclusions.

	Lake should detect whether MASTER_TEX_FILES is nil and gracefully fail.
	This happens with my dissertation because paper.master is the actual checked
	in version of paper.tex.

	1. We need to generalize the pdf viewer, by replacing the hardcoded xpdf
	with a variable.  We also need to add a variable that contains the switches
	necessary for reloading the pdf.  I especially want to do this because
	evince looks *so* much better than xpdf on the screen and also prints
	better.  To reload evince foo.pdf, we just re-issue evince foo.pdf, in
	contrast with xpdf.

	2.  Add a Bibtex subsection to the Usage section.

	3.  Drop the rake view rule in the README, which means that we need to
	implement the new rake build and view behavior.  I advocate this because I
	don't think we should plan to change the fundamental way to use lake shortly
	after release.  On the multiple tex master front, I believe the behavior
	should be to view/reload all pdfs listed, where epsilon = all pdfs.

	4.  Complete list of suffixes that Lake recognizes somewhere in the Usage
	section, not sure where.


Better support for multiple pdfs (was masterexclusions)
	given a project with two master tex files α and β,

	rake		# builds all (here α and β) and views the first in
				# lexicographic order (α)
	rake α		# builds and views alpha
	rake α.pdf	# builds alpha
	rake pdf	# build first pdf (in this case α)
	rake pdfs	# build all pdfs


